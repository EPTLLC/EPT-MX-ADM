name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Lint with flake8
      run: |
        flake8 . --count --max-line-length=127 --statistics --exclude=static/vendor
      continue-on-error: true
    
    - name: Run tests
      env:
        FLASK_SECRET_KEY: test-secret-key-minimum-32-chars-long-for-testing  # pragma: allowlist secret
        EPT_DISABLE_SSL_VERIFY: "true"
      run: |
        python -m pytest tests/test_minimal.py tests/test_ci.py -v --cov=. --cov-report=term-missing
    


  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    
    - name: Install bandit
      run: pip install bandit
    
    - name: Run security scan
      run: bandit -r . -x tests/ || true

  build:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Build check
      run: echo "Build completed successfully" 
