name: Security & Quality Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run weekly security scans
    - cron: '0 0 * * 1'

jobs:
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install bandit pip-audit detect-secrets safety
    
    - name: Run Bandit (Security Linter)
      run: |
        bandit -r . -x ./venv,./tests --format json -o bandit-report.json || true
        bandit -r . -x ./venv,./tests --format txt
      continue-on-error: true
    
    - name: Run pip-audit (Dependency Vulnerabilities)
      run: |
        pip-audit -r requirements.txt --format json -o pip-audit-report.json || true
        pip-audit -r requirements.txt
      continue-on-error: true
    
    - name: Run detect-secrets (Secret Scanning)
      run: |
        detect-secrets scan --all-files --baseline .secrets.baseline || true
        detect-secrets audit .secrets.baseline
      continue-on-error: true
    
    - name: Upload Security Reports
      uses: actions/upload-artifact@v5
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
          pip-audit-report.json
          .secrets.baseline
        retention-days: 30

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install flake8
    
    - name: Run Flake8
      run: |
        flake8 . --count --statistics --format=html --htmldir=flake8-report || true
        flake8 . --count --statistics
      continue-on-error: true
    
    - name: Upload Flake8 Report
      uses: actions/upload-artifact@v5
      if: always()
      with:
        name: flake8-report
        path: flake8-report/
        retention-days: 30

  tests:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Run pytest
      run: |
        pytest tests/ -v --tb=short --junitxml=pytest-report.xml --cov=. --cov-report=html --cov-report=term
      continue-on-error: true
    
    - name: Upload Test Results
      uses: actions/upload-artifact@v5
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          pytest-report.xml
          htmlcov/
        retention-days: 30

  build-check:
    name: Build Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install build tools
      run: |
        python -m pip install --upgrade pip setuptools wheel build
    
    - name: Build package
      run: |
        python -m build
    
    - name: Check package
      run: |
        pip install twine
        twine check dist/*
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v5
      with:
        name: dist-packages
        path: dist/
        retention-days: 7

