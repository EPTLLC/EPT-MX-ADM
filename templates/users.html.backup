{% extends "base.html" %}

{% block title %}{{ t('users.title') }} - {{ t('app.name') }}{% endblock %}

{% block content %}
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2"><i class="bi bi-people"></i> {{ t('users.title') }}</h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group me-2">
            <button type="button" class="btn btn-sm btn-outline-secondary" data-refresh>
                <i class="bi bi-arrow-clockwise"></i> {{ t('dashboard.refresh') }}
            </button>
        </div>
        <div class="btn-group me-2">
            <a href="{{ url_for('users.export_users', search=search, guests=show_guests, deactivated=show_deactivated) }}" 
               class="btn btn-sm btn-outline-success">
                <i class="bi bi-file-earmark-arrow-down"></i> {{ t('users.csv_export') }}
            </a>
            <button type="button" class="btn btn-sm btn-outline-primary" data-bs-toggle="modal" data-bs-target="#importModal">
                <i class="bi bi-file-earmark-arrow-up"></i> {{ t('users.csv_import') }}
            </button>
        </div>
        <a href="{{ url_for('users.create_user') }}" class="btn btn-sm btn-primary">
            <i class="bi bi-person-plus"></i> {{ t('users.create_user') }}
        </a>
    </div>
</div>

<!-- Filters and Search -->
<div class="row mb-3">
    <div class="col-md-6">
        <form method="GET" id="filtersForm">
            <div class="input-group">
                <input type="text" class="form-control" name="search" value="{{ search }}" 
                       placeholder="{{ t('users.search_placeholder') }}">
                <button class="btn btn-outline-secondary" type="submit">
                    <i class="bi bi-search"></i>
                </button>
            </div>
            <!-- Hidden inputs to preserve current filters -->
            <input type="hidden" name="limit" value="{{ limit }}">
            <input type="hidden" name="guests" value="{{ 'true' if show_guests else 'false' }}">
            <input type="hidden" name="deactivated" value="{{ 'true' if show_deactivated else 'false' }}">
        </form>
    </div>
    <div class="col-md-6">
        <div class="d-flex justify-content-end align-items-center gap-3">
            <!-- Show Filters -->
            <div class="form-check form-switch">
                <input class="form-check-input" type="checkbox" id="showGuests" 
                       {{ 'checked' if show_guests else '' }} onchange="toggleFilter('guests', this.checked)">
                <label class="form-check-label" for="showGuests">
                    {{ t('users.show_guests') }}
                </label>
            </div>
            <div class="form-check form-switch">
                <input class="form-check-input" type="checkbox" id="showDeactivated" 
                       {{ 'checked' if show_deactivated else '' }} onchange="toggleFilter('deactivated', this.checked)">
                <label class="form-check-label" for="showDeactivated">
                    {{ t('users.show_deactivated') }}
                </label>
            </div>
            <!-- Per Page Selector -->
            <div class="d-flex align-items-center">
                <label class="form-label me-2 mb-0">{{ t('pagination.rows_per_page') }}:</label>
                <select class="form-select form-select-sm" style="width: auto;" onchange="changeLimit(this.value)">
                    <option value="10" {{ 'selected' if limit == 10 else '' }}>10</option>
                    <option value="25" {{ 'selected' if limit == 25 else '' }}>25</option>
                    <option value="50" {{ 'selected' if limit == 50 else '' }}>50</option>
                    <option value="100" {{ 'selected' if limit == 100 else '' }}>100</option>
                    <option value="500" {{ 'selected' if limit == 500 else '' }}>500</option>
                    <option value="1000" {{ 'selected' if limit == 1000 else '' }}>1000</option>
                </select>
            </div>
        </div>
    </div>
</div>

<!-- Users Table -->
<div class="card shadow">
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th><i class="bi bi-person-circle"></i></th>
                        <th>{{ t('users.user_id') }}</th>
                        <th>{{ t('users.display_name') }}</th>
                        <th>{{ t('users.admin') }}</th>
                        <th>{{ t('users.active') }}</th>
                        <th>{{ t('users.created') }}</th>
                        <th>{{ t('users.actions') }}</th>
                    </tr>
                </thead>
                <tbody>
                    {% for user in users %}
                    <tr>
                        <td>
                            <i class="bi bi-person-circle text-primary"></i>
                        </td>
                        <td>
                            <strong>{{ user.name }}</strong>
                        </td>
                        <td>{{ user.displayname or '-' }}</td>
                        <td>
                            {% if user.admin %}
                                <span class="badge bg-danger">{{ t('users.admin') }}</span>
                            {% else %}
                                <span class="badge bg-secondary">{{ t('forms.user') }}</span>
                            {% endif %}
                        </td>
                        <td>
                            {% if user.deactivated %}
                                <span class="badge bg-warning">{{ t('users.deactivated') }}</span>
                            {% else %}
                                <span class="badge bg-success">{{ t('users.active') }}</span>
                            {% endif %}
                        </td>
                        <td>
                            {% if user.creation_ts %}
                                {{ (user.creation_ts / 1000) | int | datetime_format }}
                            {% else %}
                                -
                            {% endif %}
                        </td>
                        <td>
                            <div class="btn-group btn-group-sm">
                                <!-- Info Button -->
                                <button type="button" 
                                        class="btn btn-outline-info" 
                                        onclick="showUserWhois('{{ user.name }}')"
                                        title="User Information">
                                    <i class="bi bi-info-circle"></i>
                                </button>
                                
                                <!-- Edit Button -->
                                <a href="{{ url_for('users.edit_user', user_id=user.name) }}" 
                                   class="btn btn-outline-warning" title="Edit User">
                                    <i class="bi bi-pencil"></i>
                                </a>
                                
                                <!-- Deactivate/Reactivate Button -->
                                {% if user.deactivated %}
                                <form method="POST" action="{{ url_for('users.reactivate_user', user_id=user.name) }}" 
                                      style="display: inline;">
                                    <button type="submit" class="btn btn-outline-success" title="Reactivate"
                                            onclick="return confirm('Reactivate user {{ user.name }}?')">
                                        <i class="bi bi-check-circle"></i>
                                    </button>
                                </form>
                                {% elif not user.admin %}
                                <form method="POST" action="{{ url_for('users.deactivate_user', user_id=user.name) }}" 
                                      style="display: inline;">
                                    <button type="submit" class="btn btn-outline-warning" title="Deactivate"
                                            onclick="return confirm('Deactivate user {{ user.name }}?')">
                                        <i class="bi bi-x-circle"></i>
                                    </button>
                                </form>
                                {% endif %}
                                
                                <!-- Delete Button (only for non-admin users) -->
                                {% if not user.admin %}
                                <form method="POST" action="{{ url_for('users.delete_user', user_id=user.name) }}" 
                                      style="display: inline;">
                                    <button type="submit" class="btn btn-outline-danger" title="Delete User"
                                            onclick="return confirm('PERMANENTLY DELETE user {{ user.name }}? This action cannot be undone!')">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </form>
                                {% endif %}
                            </div>
                        </td>
                    </tr>
                    {% else %}
                    <tr>
                        <td colspan="7" class="text-center text-muted">
                            <i class="bi bi-inbox"></i> {{ t('users.no_users') }}
                            {% if search or show_guests or show_deactivated %}
                                <br><small>{{ t('messages.try_different_search') }}</small>
                            {% endif %}
                        </td>
                    </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
        
        <!-- Enhanced Pagination -->
        {% if total > 0 %}
        <div class="d-flex justify-content-between align-items-center mt-3">
            <div>
                <small class="text-muted">
                    {{ t('pagination.showing') }} 
                    {{ ((current_page - 1) * limit + 1) if users else 0 }} - 
                    {{ (current_page * limit) if (current_page * limit) < total else total }} 
                    {{ t('pagination.of') }} {{ total }} {{ t('pagination.entries') }}
                </small>
            </div>
            
            {% if total_pages > 1 %}
            <nav aria-label="Users pagination">
                <ul class="pagination pagination-sm mb-0">
                    <!-- First Page -->
                    {% if current_page > 1 %}
                    <li class="page-item">
                        <a class="page-link" href="{{ url_for('users', page=1, limit=limit, search=search, guests=show_guests, deactivated=show_deactivated) }}">
                            <i class="bi bi-chevron-double-left"></i>
                        </a>
                    </li>
                    {% endif %}
                    
                    <!-- Previous Page -->
                    {% if current_page > 1 %}
                    <li class="page-item">
                        <a class="page-link" href="{{ url_for('users', page=current_page-1, limit=limit, search=search, guests=show_guests, deactivated=show_deactivated) }}">
                            <i class="bi bi-chevron-left"></i>
                        </a>
                    </li>
                    {% endif %}
                    
                    <!-- Page Numbers -->
                    {% set start_page = (1 if current_page <= 3 else current_page - 2) %}
                    {% set end_page = (total_pages if current_page >= total_pages - 2 else current_page + 2) %}
                    
                    {% for page_num in range(start_page, end_page + 1) %}
                        {% if page_num == current_page %}
                        <li class="page-item active">
                            <span class="page-link">{{ page_num }}</span>
                        </li>
                        {% else %}
                        <li class="page-item">
                            <a class="page-link" href="{{ url_for('users', page=page_num, limit=limit, search=search, guests=show_guests, deactivated=show_deactivated) }}">
                                {{ page_num }}
                            </a>
                        </li>
                        {% endif %}
                    {% endfor %}
                    
                    <!-- Next Page -->
                    {% if current_page < total_pages %}
                    <li class="page-item">
                        <a class="page-link" href="{{ url_for('users', page=current_page+1, limit=limit, search=search, guests=show_guests, deactivated=show_deactivated) }}">
                            <i class="bi bi-chevron-right"></i>
                        </a>
                    </li>
                    {% endif %}
                    
                    <!-- Last Page -->
                    {% if current_page < total_pages %}
                    <li class="page-item">
                        <a class="page-link" href="{{ url_for('users', page=total_pages, limit=limit, search=search, guests=show_guests, deactivated=show_deactivated) }}">
                            <i class="bi bi-chevron-double-right"></i>
                        </a>
                    </li>
                    {% endif %}
                </ul>
            </nav>
            {% endif %}
        </div>
        {% endif %}
    </div>
</div>

<!-- CSV Import Modal -->
<div class="modal fade" id="importModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="bi bi-file-earmark-arrow-up me-2"></i>
                    {{ t('users.import_users') }}
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form method="POST" action="{{ url_for('users.import_users') }}" enctype="multipart/form-data">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="csv_file" class="form-label">{{ t('users.choose_file') }}</label>
                        <input type="file" class="form-control" name="csv_file" accept=".csv" required>
                        <div class="form-text">
                            {{ t('users.csv_import') }} (.csv)
                        </div>
                    </div>
                    <div class="alert alert-info">
                        <small>
                            <strong>CSV {{ t('forms.required') }}:</strong><br>
                            user_id, display_name, admin, password
                        </small>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">{{ t('forms.cancel') }}</button>
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-upload"></i> {{ t('users.upload') }}
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- User Whois Modal -->
<div class="modal fade" id="userWhoisModal" tabindex="-1">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title">
                    <i class="bi bi-person-badge me-2"></i>
                    {{ t('users.user_profile') }}
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body p-0" id="whoisContent">
                <div class="text-center py-5">
                    <div class="spinner-border text-primary" role="status" style="width: 3rem; height: 3rem;">
                        <span class="visually-hidden">{{ t('messages.loading') }}...</span>
                    </div>
                    <div class="mt-3">{{ t('messages.loading') }}...</div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Password Reset Modal -->
<div class="modal fade" id="passwordResetModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="bi bi-key me-2"></i>Reset Password
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form method="POST" id="passwordResetForm">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="new_password" class="form-label">New Password</label>
                        <input type="password" class="form-control" name="new_password" id="new_password" required>
                        <div class="form-text">
                            Enter a new password for the user
                        </div>
                    </div>
                    <div class="alert alert-warning">
                        <i class="bi bi-exclamation-triangle me-2"></i>
                        <strong>Warning:</strong> This will immediately change the user's password.
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-warning">
                        <i class="bi bi-key"></i> Reset Password
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Rate Limit Modal -->
<div class="modal fade" id="rateLimitModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="bi bi-speedometer2 me-2"></i>Configure Rate Limits
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form method="POST" id="rateLimitForm">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="messages_per_second" class="form-label">Messages per Second</label>
                        <input type="number" class="form-control" name="messages_per_second" id="messages_per_second" 
                               min="0" step="0.1" placeholder="e.g., 1.0">
                        <div class="form-text">
                            Maximum messages per second (leave empty for default)
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="burst_count" class="form-label">Burst Count</label>
                        <input type="number" class="form-control" name="burst_count" id="burst_count" 
                               min="0" placeholder="e.g., 10">
                        <div class="form-text">
                            Maximum burst messages (leave empty for default)
                        </div>
                    </div>
                    <div class="alert alert-info">
                        <i class="bi bi-info-circle me-2"></i>
                        <strong>Info:</strong> Rate limits help prevent spam and abuse. Leave fields empty to use server defaults.
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-speedometer2"></i> Apply Limits
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- User Token Modal -->
<div class="modal fade" id="userTokenModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="bi bi-person-check me-2"></i>User Access Token
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="tokenContent">
                <div class="text-center py-3">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block scripts %}
<script>
function toggleFilter(filterName, checked) {
    const url = new URL(window.location);
    url.searchParams.set(filterName, checked ? 'true' : 'false');
    url.searchParams.set('page', '1'); // Reset to first page
    window.location.href = url.toString();
}

function changeLimit(newLimit) {
    const url = new URL(window.location);
    url.searchParams.set('limit', newLimit);
    url.searchParams.set('page', '1'); // Reset to first page
    window.location.href = url.toString();
}

function showUserWhois(userId) {
    // Use the enhanced modal instead
    showEnhancedUserModal(userId);
}

function displayWhoisData(whois, userId) {
    const content = document.getElementById('whoisContent');
    
    // Get avatar URL from user data (we'll enhance this later)
    const avatarUrl = whois.avatar_url || null;
    
    let html = 
        '<div class="row g-0">' +
            // Left side - Avatar and basic info
            '<div class="col-md-4 bg-dark text-white p-4">' +
                '<div class="text-center mb-4">' +
                    '<div class="position-relative d-inline-block">' +
                        (avatarUrl ? 
                            '<img src="' + avatarUrl + '" class="rounded-circle border border-3 border-light" style="width: 150px; height: 150px; object-fit: cover;">' :
                            '<div class="bg-primary rounded-circle border border-3 border-light d-flex align-items-center justify-content-center" style="width: 150px; height: 150px; font-size: 3rem;"><i class="bi bi-person-fill"></i></div>'
                        ) +
                        '<div class="position-absolute bottom-0 end-0">' +
                            '<span class="badge bg-success rounded-pill" style="width: 30px; height: 30px; display: flex; align-items: center; justify-content: center;">' +
                                '<i class="bi bi-check-lg"></i>' +
                            '</span>' +
                        '</div>' +
                    '</div>' +
                '</div>' +
                '<div class="text-center">' +
                    '<h4 class="mb-1">' + (whois.displayname || userId.split(':')[0].substring(1)) + '</h4>' +
                    '<p class="text-muted mb-3">' + userId + '</p>' +
                    '<div class="d-flex justify-content-center gap-2 mb-3">' +
                        (whois.admin ? '<span class="badge bg-danger">{{ t("users.admin") }}</span>' : '<span class="badge bg-secondary">{{ t("forms.user") }}</span>') +
                        (whois.deactivated ? '<span class="badge bg-warning">{{ t("users.deactivated") }}</span>' : '<span class="badge bg-success">{{ t("users.active") }}</span>') +
                    '</div>' +
                '</div>' +
                '<hr class="border-light">' +
                '<div class="mb-3">' +
                    '<h6><i class="bi bi-calendar-plus me-2"></i>{{ t("users.created") }}</h6>' +
                    '<p class="mb-0">' + (whois.creation_ts ? new Date(whois.creation_ts).toLocaleString() : '{{ t("messages.unknown") }}') + '</p>' +
                '</div>' +
                '<div class="mb-3">' +
                    '<h6><i class="bi bi-clock me-2"></i>{{ t("users.last_seen") }}</h6>' +
                    '<p class="mb-0">' + (whois.last_seen_ts ? new Date(whois.last_seen_ts).toLocaleString() : '{{ t("messages.unknown") }}') + '</p>' +
                '</div>' +
            '</div>' +
            
            // Right side - Detailed information
            '<div class="col-md-8 p-4">' +
                '<div class="row">' +
                    // Account Information
                    '<div class="col-12 mb-4">' +
                        '<div class="card border-0 shadow-sm">' +
                            '<div class="card-header bg-light">' +
                                '<h5 class="mb-0"><i class="bi bi-person-lines-fill me-2"></i>{{ t("users.account_info") }}</h5>' +
                            '</div>' +
                            '<div class="card-body">' +
                                '<div class="row">' +
                                    '<div class="col-md-6">' +
                                        '<strong>{{ t("users.user_id") }}:</strong><br>' +
                                        '<code class="text-primary">' + userId + '</code>' +
                                    '</div>' +
                                    '<div class="col-md-6">' +
                                        '<strong>{{ t("users.display_name") }}:</strong><br>' +
                                        '<span>' + (whois.displayname || '{{ t("messages.not_specified") }}') + '</span>' +
                                    '</div>' +
                                '</div>' +
                                '<hr>' +
                                '<div class="row">' +
                                    '<div class="col-md-6">' +
                                        '<strong>{{ t("users.user_type") }}:</strong><br>' +
                                        '<span>' + (whois.admin ? '{{ t("users.admin") }}' : '{{ t("users.regular") }}') + '</span>' +
                                    '</div>' +
                                    '<div class="col-md-6">' +
                                        '<strong>{{ t("users.account_status") }}:</strong><br>' +
                                        '<span>' + (whois.deactivated ? '{{ t("users.deactivated") }}' : '{{ t("users.active") }}') + '</span>' +
                                    '</div>' +
                                '</div>' +
                            '</div>' +
                        '</div>' +
                    '</div>' +
                '</div>';
    
    // User devices section
    if (whois.devices && whois.devices.length > 0) {
        html += '<div class="row">' +
                    '<div class="col-12 mb-4">' +
                        '<div class="card border-0 shadow-sm">' +
                            '<div class="card-header bg-light">' +
                                '<h5 class="mb-0"><i class="bi bi-phone me-2"></i>{{ t("users.devices") }} <span class="badge bg-primary">' + whois.devices.length + '</span></h5>' +
                            '</div>' +
                            '<div class="card-body p-0">' +
                                '<div class="table-responsive">' +
                                    '<table class="table table-hover mb-0">' +
                                        '<thead class="table-light">' +
                                            '<tr>' +
                                                '<th><i class="bi bi-phone me-1"></i>{{ t("users.device_id") }}</th>' +
                                                '<th><i class="bi bi-tag me-1"></i>{{ t("users.display_name") }}</th>' +
                                                '<th><i class="bi bi-geo-alt me-1"></i>{{ t("users.last_seen_ip") }}</th>' +
                                                '<th><i class="bi bi-clock me-1"></i>{{ t("users.last_seen") }}</th>' +
                                            '</tr>' +
                                        '</thead>' +
                                        '<tbody>';
        
        whois.devices.forEach(device => {
            const deviceIcon = device.display_name && device.display_name.toLowerCase().includes('mobile') ? 'phone' : 'laptop';
            html += '<tr>' +
                        '<td><i class="bi bi-' + deviceIcon + ' me-2 text-muted"></i><code>' + (device.device_id || 'Unknown') + '</code></td>' +
                        '<td>' + (device.display_name || '<em class="text-muted">{{ t("messages.not_specified") }}</em>') + '</td>' +
                        '<td><span class="badge bg-secondary">' + (device.last_seen_ip || '{{ t("messages.unknown") }}') + '</span></td>' +
                        '<td>' + (device.last_seen_ts ? '<small>' + new Date(device.last_seen_ts).toLocaleString() + '</small>' : '<em class="text-muted">{{ t("messages.unknown") }}</em>') + '</td>' +
                    '</tr>';
        });
        
        html += '</tbody></table></div></div></div></div></div>';
    } else {
        html += '<div class="row">' +
                    '<div class="col-12 mb-4">' +
                        '<div class="card border-0 shadow-sm">' +
                            '<div class="card-header bg-light">' +
                                '<h5 class="mb-0"><i class="bi bi-phone me-2"></i>{{ t("users.devices") }}</h5>' +
                            '</div>' +
                            '<div class="card-body text-center text-muted">' +
                                '<i class="bi bi-phone-x mb-3" style="font-size: 2rem;"></i>' +
                                '<p>{{ t("users.no_devices") }}</p>' +
                            '</div>' +
                        '</div>' +
                    '</div>' +
                '</div>';
    }
    
    html += '</div></div>';
    
    content.innerHTML = html;
}

// Password Reset Modal
function showPasswordResetModal(userId) {
    const modal = new bootstrap.Modal(document.getElementById('passwordResetModal'));
    const form = document.getElementById('passwordResetForm');
    
    // Set form action
    form.action = '/users/' + encodeURIComponent(userId) + '/reset_password';
    
    // Clear previous input
    document.getElementById('new_password').value = '';
    
    modal.show();
}

// Rate Limit Modal
function showRateLimitModal(userId) {
    const modal = new bootstrap.Modal(document.getElementById('rateLimitModal'));
    const form = document.getElementById('rateLimitForm');
    
    // Set form action
    form.action = '/users/' + encodeURIComponent(userId) + '/rate_limit';
    
    // Clear previous inputs
    document.getElementById('messages_per_second').value = '';
    document.getElementById('burst_count').value = '';
    
    modal.show();
}

// Login As User
function loginAsUser(userId) {
    if (!confirm('Generate access token for user ' + userId + '?')) {
        return;
    }
    
    const modal = new bootstrap.Modal(document.getElementById('userTokenModal'));
    const content = document.getElementById('tokenContent');
    
    // Show loading
    content.innerHTML = 
        '<div class="text-center py-3">' +
            '<div class="spinner-border text-primary" role="status">' +
                '<span class="visually-hidden">Loading...</span>' +
            '</div>' +
            '<p class="mt-2">Generating access token...</p>' +
        '</div>';
    
    modal.show();
    
    // Make request to generate token
    fetch('/users/' + encodeURIComponent(userId) + '/login_as', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
        }
    })
    .then(response => {
        if (response.redirected) {
            // If redirected, it means there was an error and we got redirected back
            window.location.reload();
            return;
        }
        return response.text();
    })
    .then(html => {
        if (html) {
            // If we got HTML back, it means we got the token page
            // Extract token data from the response (this would need to be implemented properly)
            content.innerHTML = 
                '<div class="alert alert-success">' +
                    '<h5><i class="bi bi-check-circle me-2"></i>Access Token Generated</h5>' +
                    '<p>Access token has been generated for user <strong>' + userId + '</strong></p>' +
                    '<div class="mt-3">' +
                        '<label class="form-label">Access Token:</label>' +
                        '<div class="input-group">' +
                            '<input type="text" class="form-control font-monospace" value="[Token would be displayed here]" readonly>' +
                            '<button class="btn btn-outline-secondary" type="button" onclick="copyToClipboard(this.previousElementSibling)">' +
                                '<i class="bi bi-clipboard"></i>' +
                            '</button>' +
                        '</div>' +
                        '<small class="form-text text-muted">This token can be used to authenticate as this user.</small>' +
                    '</div>' +
                '</div>';
        }
    })
    .catch(error => {
        content.innerHTML = 
            '<div class="alert alert-danger">' +
                '<i class="bi bi-exclamation-triangle me-2"></i>' +
                'Error generating token: ' + error.message +
            '</div>';
    });
}

// Copy to clipboard function
function copyToClipboard(element) {
    element.select();
    element.setSelectionRange(0, 99999);
    navigator.clipboard.writeText(element.value);
    
    // Show feedback
    const button = element.nextElementSibling;
    const originalHTML = button.innerHTML;
    button.innerHTML = '<i class="bi bi-check"></i>';
    button.classList.remove('btn-outline-secondary');
    button.classList.add('btn-success');
    
    setTimeout(() => {
        button.innerHTML = originalHTML;
        button.classList.remove('btn-success');
        button.classList.add('btn-outline-secondary');
    }, 2000);
}

// Enhanced User Info Modal with more actions
function showEnhancedUserModal(userId) {
    const modal = new bootstrap.Modal(document.getElementById('userWhoisModal'));
    const content = document.getElementById('whoisContent');
    
    // Show loading
    content.innerHTML = 
        '<div class="text-center py-5">' +
            '<div class="spinner-border text-primary" role="status" style="width: 3rem; height: 3rem;">' +
                '<span class="visually-hidden">Loading...</span>' +
            '</div>' +
            '<div class="mt-3">Loading user information...</div>' +
        '</div>';
    
    modal.show();
    
    // Fetch comprehensive user data
    Promise.all([
        fetch('/api/users/' + encodeURIComponent(userId) + '/whois'),
        fetch('/api/users/' + encodeURIComponent(userId) + '/devices'),
    ])
    .then(responses => Promise.all(responses.map(r => r.json())))
    .then(([whoisData, devicesData]) => {
        if (whoisData.success) {
            // Merge devices data if available
            if (devicesData.success) {
                whoisData.whois.devices = devicesData.devices;
            }
            displayEnhancedWhoisData(whoisData.whois, userId);
        } else {
            content.innerHTML = 
                '<div class="alert alert-danger m-4">' +
                    '<i class="bi bi-exclamation-triangle me-2"></i>' +
                    'Error: ' + (whoisData.error || 'Unknown error') +
                '</div>';
        }
    })
    .catch(error => {
        content.innerHTML = 
            '<div class="alert alert-danger m-4">' +
                '<i class="bi bi-exclamation-triangle me-2"></i>' +
                'Network error: ' + error.message +
            '</div>';
    });
}

// Enhanced display function with action buttons
function displayEnhancedWhoisData(whois, userId) {
    const content = document.getElementById('whoisContent');
    const avatarUrl = whois.avatar_url || null;
    
    let html = 
        '<div class="row g-0">' +
            // Left side - Avatar and basic info with actions
            '<div class="col-md-4 bg-dark text-white p-4">' +
                '<div class="text-center mb-4">' +
                    '<div class="position-relative d-inline-block">' +
                        (avatarUrl ? 
                            '<img src="' + avatarUrl + '" class="rounded-circle border border-3 border-light" style="width: 150px; height: 150px; object-fit: cover;">' :
                            '<div class="bg-primary rounded-circle border border-3 border-light d-flex align-items-center justify-content-center" style="width: 150px; height: 150px; font-size: 3rem;"><i class="bi bi-person-fill"></i></div>'
                        ) +
                        '<div class="position-absolute bottom-0 end-0">' +
                            '<span class="badge bg-success rounded-pill" style="width: 30px; height: 30px; display: flex; align-items: center; justify-content: center;">' +
                                '<i class="bi bi-check-lg"></i>' +
                            '</span>' +
                        '</div>' +
                    '</div>' +
                '</div>' +
                '<div class="text-center">' +
                    '<h4 class="mb-1">' + (whois.displayname || userId.split(':')[0].substring(1)) + '</h4>' +
                    '<p class="text-muted mb-3">' + userId + '</p>' +
                    '<div class="d-flex justify-content-center gap-2 mb-3">' +
                        (whois.admin ? '<span class="badge bg-danger">Admin</span>' : '<span class="badge bg-secondary">User</span>') +
                        (whois.deactivated ? '<span class="badge bg-warning">Deactivated</span>' : '<span class="badge bg-success">Active</span>') +
                    '</div>' +
                '</div>' +
                
                // Quick Actions in modal
                '<div class="d-grid gap-2 mb-4">' +
                    '<a href="/users/' + encodeURIComponent(userId) + '/edit" class="btn btn-outline-light btn-sm">' +
                        '<i class="bi bi-pencil me-2"></i>Edit User' +
                    '</a>' +
                    '<a href="/users/' + encodeURIComponent(userId) + '/media" class="btn btn-outline-light btn-sm">' +
                        '<i class="bi bi-file-earmark-image me-2"></i>View Media' +
                    '</a>' +
                    '<button class="btn btn-outline-light btn-sm" onclick="showPasswordResetModal(\'' + userId + '\')">' +
                        '<i class="bi bi-key me-2"></i>Reset Password' +
                    '</button>' +
                    '<button class="btn btn-outline-light btn-sm" onclick="showRateLimitModal(\'' + userId + '\')">' +
                        '<i class="bi bi-speedometer2 me-2"></i>Rate Limits' +
                    '</button>' +
                '</div>' +
                
                '<hr class="border-light">' +
                '<div class="mb-3">' +
                    '<h6><i class="bi bi-calendar-plus me-2"></i>Created</h6>' +
                    '<p class="mb-0">' + (whois.creation_ts ? new Date(whois.creation_ts).toLocaleString() : 'Unknown') + '</p>' +
                '</div>' +
                '<div class="mb-3">' +
                    '<h6><i class="bi bi-clock me-2"></i>Last Seen</h6>' +
                    '<p class="mb-0">' + (whois.last_seen_ts ? new Date(whois.last_seen_ts).toLocaleString() : 'Unknown') + '</p>' +
                '</div>' +
            '</div>' +
            
            // Right side - Detailed information
            '<div class="col-md-8 p-4">' +
                '<div class="row">' +
                    // Account Information
                    '<div class="col-12 mb-4">' +
                        '<div class="card border-0 shadow-sm">' +
                            '<div class="card-header bg-light">' +
                                '<h5 class="mb-0"><i class="bi bi-person-lines-fill me-2"></i>Account Information</h5>' +
                            '</div>' +
                            '<div class="card-body">' +
                                '<div class="row">' +
                                    '<div class="col-md-6">' +
                                        '<strong>User ID:</strong><br>' +
                                        '<code class="text-primary">' + userId + '</code>' +
                                    '</div>' +
                                    '<div class="col-md-6">' +
                                        '<strong>Display Name:</strong><br>' +
                                        '<span>' + (whois.displayname || 'Not specified') + '</span>' +
                                    '</div>' +
                                '</div>' +
                                '<hr>' +
                                '<div class="row">' +
                                    '<div class="col-md-6">' +
                                        '<strong>User Type:</strong><br>' +
                                        '<span>' + (whois.admin ? 'Administrator' : 'Regular User') + '</span>' +
                                    '</div>' +
                                    '<div class="col-md-6">' +
                                        '<strong>Account Status:</strong><br>' +
                                        '<span>' + (whois.deactivated ? 'Deactivated' : 'Active') + '</span>' +
                                    '</div>' +
                                '</div>' +
                            '</div>' +
                        '</div>' +
                    '</div>' +
                '</div>';
    
    // User devices section with enhanced display
    if (whois.devices && whois.devices.length > 0) {
        html += '<div class="row">' +
                    '<div class="col-12 mb-4">' +
                        '<div class="card border-0 shadow-sm">' +
                            '<div class="card-header bg-light d-flex justify-content-between align-items-center">' +
                                '<h5 class="mb-0"><i class="bi bi-phone me-2"></i>Devices <span class="badge bg-primary">' + whois.devices.length + '</span></h5>' +
                                '<small class="text-muted">Active sessions and devices</small>' +
                            '</div>' +
                            '<div class="card-body p-0">' +
                                '<div class="table-responsive">' +
                                    '<table class="table table-hover mb-0">' +
                                        '<thead class="table-light">' +
                                            '<tr>' +
                                                '<th><i class="bi bi-phone me-1"></i>Device</th>' +
                                                '<th><i class="bi bi-tag me-1"></i>Name</th>' +
                                                '<th><i class="bi bi-geo-alt me-1"></i>Last IP</th>' +
                                                '<th><i class="bi bi-clock me-1"></i>Last Seen</th>' +
                                                '<th>Actions</th>' +
                                            '</tr>' +
                                        '</thead>' +
                                        '<tbody>';
        
        whois.devices.forEach(device => {
            const deviceIcon = device.display_name && device.display_name.toLowerCase().includes('mobile') ? 'phone' : 'laptop';
            html += '<tr>' +
                        '<td><i class="bi bi-' + deviceIcon + ' me-2 text-muted"></i><code class="small">' + (device.device_id || 'Unknown') + '</code></td>' +
                        '<td>' + (device.display_name || '<em class="text-muted">Not specified</em>') + '</td>' +
                        '<td><span class="badge bg-secondary">' + (device.last_seen_ip || 'Unknown') + '</span></td>' +
                        '<td>' + (device.last_seen_ts ? '<small>' + new Date(device.last_seen_ts).toLocaleString() + '</small>' : '<em class="text-muted">Unknown</em>') + '</td>' +
                        '<td>' +
                            '<button class="btn btn-outline-danger btn-sm" onclick="deleteDevice(\'' + userId + '\', \'' + device.device_id + '\')" title="Delete Device">' +
                                '<i class="bi bi-trash"></i>' +
                            '</button>' +
                        '</td>' +
                    '</tr>';
        });
        
        html += '</tbody></table></div></div></div></div></div>';
    } else {
        html += '<div class="row">' +
                    '<div class="col-12 mb-4">' +
                        '<div class="card border-0 shadow-sm">' +
                            '<div class="card-header bg-light">' +
                                '<h5 class="mb-0"><i class="bi bi-phone me-2"></i>Devices</h5>' +
                            '</div>' +
                            '<div class="card-body text-center text-muted">' +
                                '<i class="bi bi-phone-x mb-3" style="font-size: 2rem;"></i>' +
                                '<p>No devices found</p>' +
                            '</div>' +
                        '</div>' +
                    '</div>' +
                '</div>';
    }
    
    html += '</div></div>';
    
    content.innerHTML = html;
}

// Delete device function
function deleteDevice(userId, deviceId) {
    if (!confirm('Delete device ' + deviceId + ' for user ' + userId + '?')) {
        return;
    }
    
    fetch('/api/users/' + encodeURIComponent(userId) + '/devices/' + encodeURIComponent(deviceId), {
        method: 'DELETE'
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            // Refresh the modal content
            showEnhancedUserModal(userId);
        } else {
            alert('Error deleting device: ' + (data.error || 'Unknown error'));
        }
    })
    .catch(error => {
        alert('Network error: ' + error.message);
    });
}

// Refresh button functionality
document.addEventListener('DOMContentLoaded', function() {
    const refreshBtn = document.querySelector('[data-refresh]');
    if (refreshBtn) {
        refreshBtn.addEventListener('click', function() {
            window.location.reload();
        });
    }
});
</script>
{% endblock %} 